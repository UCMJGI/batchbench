
process {
    withName: get_datasets {} //is not a script itself so no libraries loading required
    
    withName: QC_h5ad {
        //conda = 'bioconda::scanpy=1.4 conda-forge::pandas conda-forge::numpy bioconda::argparse bioconda::anndata '
    }
    withName: QC_rds {} // does not require any additional library

    withName: py_bbknn{
        //installed through the Dockerfile, I guess!
    } 
    withName: py_scanorama{
        //installed through the Dockerfile, I guess!
    } 
    withName: R_harmony{
        //conda = '/nfs/cellgeni/miniconda3/envs/rharmony/'
    }
    withName: R_limma {
        //conda = 'bioconda::bioconductor-limma=3.40.0'
    }
    withName: R_combat {
        //conda = 'bioconda::bioconductor-singlecellexperiment=1.4.0 bioconda::bioconductor-sva=3.30.0'
    }
    withName: R_Seurat_v2_multiCCA{
        //conda = 'bioconda::r-seurat=2.3.4 bioconda::bioconductor-singlecellexperiment=1.4.0'
    }
    withName: R_Seurat_v3_anchors{
        //conda = 'conda-forge::r-ica bioconda::r-seurat bioconda::bioconductor-singlecellexperiment=1.4.0'  
    }
    withName: R_mnnCorrect{
        //conda = 'bioconda::bioconductor-scran'
    }
    withName: R_entropy_before-
        //conda = 'bioconda::bioconductor-scran=1.10.1 bioconda::bioconductor-scater=1.10.1'
    }
    withName: R_entropy {
        //conda = 'bioconda::bioconductor-scran'
    }
    withName: py_distances{
        //conda = 'bioconda::scanpy=1.4 conda-forge::pandas conda-forge::numpy bioconda::argparse conda-forge::scikit-learn'
    }
    withName: R_distance_before {
        //conda = 'bioconda::bioconductor-singlecellexperiment=1.4.0 conda-forge::r-lsa' 
    }
    withName: R_distance_after {
        //conda = 'bioconda::bioconductor-scran bioconda::bioconductor-singlecellexperiment=1.4.0 conda-forge::r-lsa'
    }
    withName: py_entropy {
        //conda = 'bioconda::scanpy=1.4 conda-forge::pandas conda-forge::numpy bioconda::argparse'
    }
    withName: py_UMAP {
        //conda = 'conda-forge::pandas conda-forge::numpy bioconda::argparse'
        }
    withName: R_UMAP{
        //conda = 'bioconda::bioconductor-scater'
        }
}
